---
- name: Deprovision Setup
  hosts: localhost
  gather_facts: false
  connection: local
  roles:
  - role: ansible.kubernetes-modules
    install_python_requirements: no
  - role: ansibleplaybookbundle.asb-modules
  tasks:
 # Add Pause for Aporeto Debug
  - name: Add 30 second pause for Aporeto PU identification
    pause:
      seconds: 30
  - name: "[Deprovision] Prep Parameters"
    set_fact:
      secret_mnt: "/etc/apb-secrets/apb-bkup-nfs-pv-params"
      mode: 'deprovision'

  - name: "[Deprovision] check secret mount"
    stat:
      path: "{{ secret_mnt }}"
    register: _secretMount

  - name: "[Deprovision] get Labeled storage_UID"
    shell: oc -n "{{ namespace }}" get serviceinstance -o json | jq -r '.items[] | select(.spec.externalID == "{{ _apb_service_instance_id }}") | .metadata.labels.storage_UID'
    register: _labeled_storage_UID
    changed_when: false

  - name: "[Deprovision] set storage_UID"
    set_fact:
      storage_UID: "{{ _labeled_storage_UID.stdout }}"
    when: _labeled_storage_UID.stdout != ""

  - name: "[Deprovision] Stage"
    include_tasks: stage.yml
    when: _secretMount.stat.exists


- name: "[Deprovision] OC Objects"
  hosts: localhost
  gather_facts: false
  connection: local
  vars:
    state: 'absent'
    mode: 'deprovision'
  roles:
  - role: ansible.kubernetes-modules
    install_python_requirements: no
  - role: ansibleplaybookbundle.asb-modules
  - role: backup_pvc
    playbook_debug: true


- name: "[Deprovision] Remote Objects"
  hosts: nfs_server
  remote_user: "{{ hostvars['localhost']['remote_user'] }}"
  become: true
  pre_tasks:
  - name: Carry over vars from initial play
    set_fact:
      mode: 'deprovision'
      state: 'absent'
      pvol_name: "{{ hostvars['localhost']['pvol_name'] }}"
      pvol_size: "{{ hostvars['localhost']['pvol_size'] }}"
      backup_storage_nfs_server: "{{ hostvars['localhost']['backup_storage_nfs_server'] }}"
      backup_storage_nfs_root: "{{ hostvars['localhost']['backup_storage_nfs_root'] }}"
      backup_storage_volumegroup: "{{ hostvars['localhost']['backup_storage_volumegroup'] }}"
      backup_storage_thinpool: "{{ hostvars['localhost']['backup_storage_thinpool'] }}"
  roles:
  - role: thin-nfs-export
...
